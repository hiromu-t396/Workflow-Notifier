import{a as s}from"./auth-ae73c97e.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))a(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const c of r.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&a(c)}).observe(document,{childList:!0,subtree:!0});function n(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerPolicy&&(r.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?r.credentials="include":o.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function a(o){if(o.ep)return;o.ep=!0;const r=n(o);fetch(o.href,r)}})();async function m(){try{const e=await fetch("https://api.github.com/user/repos",{headers:{Authorization:`Bearer ${await s.getToken()}`,Accept:"application/vnd.github.v3+json"}});if(!e.ok)throw new Error("Failed to fetch repositories");const t=await e.json();g(t)}catch(e){console.error("Failed to load repositories:",e),i("Failed to load repositories")}}function g(e){const t=document.getElementById("repo-select");t.innerHTML='<option value="">Select a repository</option>',e.forEach(n=>{const a=document.createElement("option");a.value=`${n.owner.login}/${n.name}`,a.textContent=`${n.owner.login}/${n.name}`,t.appendChild(a)})}async function y(){const e=document.getElementById("repo-select"),t=document.getElementById("branch"),n=document.getElementById("add-repo"),a=e.value,o=t.value.trim();if(!a){i("Please select a repository");return}if(!o){i("Please enter a branch name");return}try{n.disabled=!0;const[r,c]=a.split("/"),h={owner:r,repo:c,branch:o},d=(await chrome.storage.local.get(["watchingRepos"])).watchingRepos||[];d.push(h),await chrome.storage.local.set({watchingRepos:d}),e.value="",t.value="",l(d)}catch(r){console.error("Failed to add repository:",r),i("Failed to add repository")}finally{n.disabled=!1}}async function f(e,t,n){try{let o=(await chrome.storage.local.get(["watchingRepos"])).watchingRepos||[];o=o.filter(r=>!(r.owner===e&&r.repo===t&&r.branch===n)),await chrome.storage.local.set({watchingRepos:o}),l(o)}catch(a){console.error("Failed to remove repository:",a),i("Failed to remove repository")}}function l(e){const t=document.getElementById("repo-list");t.innerHTML="",e.forEach(n=>{const a=document.createElement("div");a.className="repo-item",a.innerHTML=`
          <div class="repo-info">
              <div class="repo-name">${n.owner}/${n.repo}</div>
              <div class="branch-name">Branch: ${n.branch}</div>
          </div>
          <button class="remove-repo" data-owner="${n.owner}" data-repo="${n.repo}" data-branch="${n.branch}">Remove</button>
      `,t.appendChild(a)}),document.querySelectorAll(".remove-repo").forEach(n=>{n.addEventListener("click",()=>{const a=n.dataset.owner,o=n.dataset.repo,r=n.dataset.branch;f(a,o,r)})})}document.addEventListener("DOMContentLoaded",async()=>{w(),E();const e=await chrome.storage.local.get(["watchingRepos"]);e.watchingRepos&&l(e.watchingRepos)});async function w(){try{if(await s.initialize()){const t=await s.getUserInfo();p(t.login)}else u()}catch(e){console.error("Failed to initialize UI:",e),u()}}function E(){document.getElementById("github-auth").addEventListener("click",v),document.getElementById("sign-out").addEventListener("click",B),document.getElementById("add-repo").addEventListener("click",y)}async function v(){try{const e=document.getElementById("github-auth");e.disabled=!0,e.textContent="Signing in...",await s.login();const t=await s.getUserInfo();p(t.login)}catch(e){console.error("Authentication failed:",e),i("Failed to sign in with GitHub. Please try again.")}finally{const e=document.getElementById("github-auth");e.disabled=!1,e.textContent="Sign in with GitHub"}}async function B(){try{await s.logout(),u()}catch(e){console.error("Sign out failed:",e),i("Failed to sign out. Please try again.")}}function p(e){document.getElementById("unauthorized").style.display="none",document.getElementById("authorized").style.display="block",document.getElementById("username").textContent=e,document.getElementById("repo-management").style.display="block",m(),chrome.storage.local.get(["watchingRepos"],t=>{t.watchingRepos&&l(t.watchingRepos)})}function u(){document.getElementById("unauthorized").style.display="block",document.getElementById("authorized").style.display="none",document.getElementById("repo-management").style.display="none"}function i(e){const t=document.createElement("div");t.className="error-message",t.textContent=e,document.querySelector(".container").prepend(t),setTimeout(()=>{t.remove()},3e3)}
